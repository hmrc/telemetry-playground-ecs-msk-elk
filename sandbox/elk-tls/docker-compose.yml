version: '2.2'

services:
  es01.telemetry.internal:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    container_name: es01
    command: /usr/share/elasticsearch/entrypoint.sh
    environment:
      - node.name=es01.telemetry.internal
      - discovery.seed_hosts=es02.telemetry.internal,es03.telemetry.internal
      - cluster.initial_master_nodes=es01.telemetry.internal,es02.telemetry.internal,es03.telemetry.internal
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m ${JAVA_DEBUG_OPTS}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
      - ./config-es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./config-es/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
      - ./entrypoint.sh:/usr/share/elasticsearch/entrypoint.sh
      - ./logs/01:/usr/share/elasticsearch/logs:rw
    ports:
      - 9200:9200
    networks:
      - elastic
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca.telemetry.internal.crt -s https://es01.telemetry.internal:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  es02.telemetry.internal:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    container_name: es02
    command: /usr/share/elasticsearch/entrypoint.sh
    environment:
      - node.name=es02.telemetry.internal
      - discovery.seed_hosts=es01.telemetry.internal,es03.telemetry.internal
      - cluster.initial_master_nodes=es01.telemetry.internal,es02.telemetry.internal,es03.telemetry.internal
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m ${JAVA_DEBUG_OPTS}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
      - ./config-es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./config-es/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
      - ./entrypoint.sh:/usr/share/elasticsearch/entrypoint.sh
      - ./logs/02:/usr/share/elasticsearch/logs:rw
    networks:
      - elastic

  es03.telemetry.internal:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    container_name: es03
    command: /usr/share/elasticsearch/entrypoint.sh
    environment:
      - node.name=es03.telemetry.internal
      - discovery.seed_hosts=es01.telemetry.internal,es02.telemetry.internal
      - cluster.initial_master_nodes=es01.telemetry.internal,es02.telemetry.internal,es03.telemetry.internal
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m ${JAVA_DEBUG_OPTS}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
      - ./config-es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./config-es/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
      - ./entrypoint.sh:/usr/share/elasticsearch/entrypoint.sh
      - ./logs/03:/usr/share/elasticsearch/logs:rw
    networks:
      - elastic

  kib01.telemetry.internal:
    image: docker.elastic.co/kibana/kibana:${VERSION}
    container_name: kib01
    depends_on: {"es01.telemetry.internal": {"condition": "service_healthy"}}
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_PASSWORD: CHANGEME
    volumes:
      - certs:/usr/share/kibana/config/certificates
      - ./config-kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elastic

volumes:
  certs:
    driver: local
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  elastic:
    driver: bridge
